
# Bancos de dados mais conhecidos (Postgresql, oracle, mysql, por exemplo), são auto-detectados por padrão.
spring.jpa.show-sql=true


#spring.jpa.hibernate.ddl-auto=update

#spring.datasource.url=jdbc:postgresql://ec2-54-163-229-212.compute-1.amazonaws.com:5432/d6gcjhsrq8t544?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
#spring.datasource.username=vyfucxrmqbryvb
#spring.datasource.password=2986225670f1b016574d00718079f245755b0e8f14e1c97eb4c053bc61544a8d 
#spring.jpa.hibernate.ddl-auto=create-drop

#spring.jpa.hibernate.ddl-auto=update
spring.thymeleaf.cache: false
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

#security
#security.oauth2.client.scope=password,refresh_token
#security.oauth2.client.client-id=user
#security.oauth2.client.client-secret=password
#spring.mvc.dispatch-options-request=true


#h2 test
spring.jpa.database=H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create

#local development
#spring.jpa.properties.hibernate.default_schema=fidelicardschema
#spring.jpa.database=POSTGRESQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/fidelicarddb
#spring.datasource.username=postgres
#spring.datasource.password=123456
#spring.jpa.hibernate.ddl-auto=update

#spring.
# Hibernate properties
#spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
#spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
#spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# The SQL dialect makes Hibernate generate better SQL for the chosen database
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=TRACE
#1) psql
#2) CREATE DATABASE db_name;
#3) \c db_name
#3) create schema schema_name;
#create schema fidelicardschema;